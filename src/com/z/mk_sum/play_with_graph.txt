
第1章 和bobo老师一起，玩转图论算法 4 节 | 53分钟
欢迎大家来到我的新课程：《玩转图论算法》。
在这个课程中，我们将一起完整学习图论领域的经典算法，培养大家的图论建模能力。
通过这个课程的学习，你将能够真正地，玩转图论算法

1-1 欢迎大家来到《玩转图论算法》 (19:52)
1-2 图论到底有什么用？ (19:57)
1-3 课程编程环境的搭建 (12:24)
(*)1-4 关于课程的其他语言支持：Python, Rust



第2章 图的基本表示 9 节 | 153分钟
千里之行，驶于足下。解决任何有一个图论算法问题，首先需要用基本的数据结构来表示图。
在这一章，我们就将探索图的基本表示问题，学习邻接矩阵和邻接表，
进而，也让同学们熟悉这个课程的整体代码风格。

2-1 图的分类 (13:44)
2-2 图的基本概念 (20:09)
2-3 图的基本表示：邻接矩阵 (20:06)
2-4 更多图的方法 (14:02)
2-5 图的基本表示：邻接表 (19:36)
2-6 邻接表的实现 (17:36)
2-7 邻接表的问题和改进 (15:09)
2-8 实现邻接表的改进 (17:32)
2-9 图的基本表示的比较 (14:13)



第3章 图的深度优先遍历9 节 | 88分钟
任何一种数据结构，都需要进行遍历。
图也不例外。通过深入理解树的遍历，掌握图的遍历并不难，
在这一章中，我们就将从树的深度优先遍历出发，为大家讲解图的深度优先遍历。
通过这个过程，也让同学们更加深刻地理解递归。

3-1 数据结构遍历的意义 (13:09)
3-2 从树的深度优先遍历，到图的深度优先遍历 (13:05)
3-3 DFS逻辑的微观解读 (20:21)
3-4 实现图的深度优先遍历 (14:48)
3-5 图的深度优先遍历的改进 (16:06)
3-6 更多关于图的深度优先遍历 (10:18)
(*)3-7 使用邻接矩阵进行图的深度优先遍历
(*)3-8 使用图的接口
(*)3-9 非递归实现图的深度优先遍历



第4章 图的深度优先遍历的应用12 节 | 141分钟
别看图的深度优先遍历简单，用处可多了。
联通分量，路径问题，环检测，二分图检测，都可以用DFS解决。
通过这一章的学习，大家不仅能够解决这些问题，
还将进一步，对递归函数的设计与编写，有更深刻的体会。

4-1 图的连通分量的个数 (09:43)
4-2 DFS中的一个技巧 (14:32)
4-3 求解联通分量 (10:36)
4-4 单源路径问题 (10:01)
4-5 单源路径问题的编程实现 (21:34)
(*)4-6 单源路径问题的一个小优化
(*)4-7 所有点对路径问题
4-8 提前结束递归：路径问题的另一个优化 (19:06)
4-9 无向图的环检测 (16:31)
4-10 二分图检测 (11:02)
4-11 实现二分图检测 (12:15)
4-12 本章小结和更多拓展 (15:12)



第5章 图的广度优先遍历10 节 | 93分钟
图的广度优先遍历是图的另外一种遍历形式。
图的广度优先遍历，不仅仅可以解决大多数DFS可以解决的问题，还拥有着独特的性质。
与此同时，在这一章，我们还将揭示DFS和BFS的神奇联系。

5-1 从树的广度优先遍历，到图的广度优先遍历 (14:07)
5-2 图的 BFS 的实现 (13:21)
5-3 使用 BFS 求解路径问题 (20:23)
(*)5-4 更多关于使用 BFS 求解路径问题
(*)5-5 使用 BFS 求解联通分量问题
(*)5-6 使用 BFS 求解环检测问题
(*)5-7 使用 BFS 求解二分图检测问题
5-8 BFS 的重要性质 (16:29)
5-9 无权图的最短路径 (14:33)
5-10 BFS 和 DFS 的神奇联系，与本章小结 (13:44)



第6章 图论问题建模和 floodfill7 节 | 91分钟
别看我们只学习了图的DFS和BFS，但其实，已经能够解决80%的面试问题了。
在这一章，我们就将通过几个经典算法面试问题，来说说图论问题建模的套路。
同时，我们会接触图论领域的一个经典算法：floodfill。

6-1 算法笔试面试中的图论问题书写 (18:26)
6-2 图的建模和二维网格中的小技巧 (20:21)
6-3 编程实现图的建模 (20:06)
6-4 floodfill 算法 (15:47)
6-5 更多 floodfill 的问题 (16:17)
(*)6-6 连通性和并查集
(*)6-7 Flood Fill 的更多优化



第7章 图论搜索和人工智能9 节 | 153分钟
在这一章，我们将来重点关注算法面试中的BFS。
不要小看BFS，在这一章，我们求解图论面试问题的过程中，
将在不经意间，接触到人工智能领域解决问题的一个重要思想：搜索。
而BFS，则是解决一大类人工智能问题的基石。

7-1 算法笔试面试中的 BFS 问题 (21:15)
7-2 图论建模的核心：状态表达 (15:42)
7-3 实现转盘锁问题 (24:41)
7-4 一道智力题 (19:14)
7-5 代码实现一道智力题 (22:52)
7-6 Leetcode 上一个困难的问题 (17:07)
7-7 实现滑动谜题 (13:13)
7-8 图论搜索和人工智能 (18:16)
(+)7-9 图论算法的应用



第8章 桥和割点，以及图的遍历树8 节 | 121分钟
对于一张图，我们可以分析出各种不同的指标。
桥和割点就是一类很重要的指标，在很多问题中有着巨大的作用。
在这一章，我们就来看看求解图中的桥和割点的算法。
同时，大家也将更深刻的了解到：DFS决不仅仅是遍历这么简单。

8-1 什么是桥 (11:30)
8-2 寻找桥的算法思路 (14:33)
8-3 模拟寻找桥算法 (17:43)
8-4 实现寻找桥算法 (21:34)
8-5 图的遍历树 (15:12)
8-6 寻找割点的算法思路 (14:00)
8-7 实现寻找割点算法 (15:33)
8-8 本章小结：关于变量语义，和如何书写正确的算法 (10:04)



第9章 哈密尔顿问题和状态压缩11 节 | 144分钟
在这一章，我们将接触大名鼎鼎的哈密尔顿问题。
在解决哈密尔顿问题的过程中，我们还将回顾诸如回溯法，状态压缩，记忆化搜索等经典算法设计思想。

9-1 哈密尔顿回路和 TSP (16:53)
9-2 求解哈密尔顿回路的算法 (14:52)
9-3 实现哈密尔顿回路的算法 (20:39)
9-4 哈密尔顿回路算法的一个优化 (12:27)
(*)9-5 哈密尔顿路径算法
9-6 Leetcode 上的哈密尔顿问题 (18:33)
(+)9-7 非递归实现哈密尔顿算法
9-8 状态压缩 (21:48)
9-9 基于状态压缩的哈密尔顿算法 (14:02)
9-10 记忆化搜索 (18:44)
9-11 哈密尔顿回路和哈密尔顿路径小结 (05:10)



第10章 欧拉回路和欧拉路径7 节 | 104分钟
在这一章，我们将接触大名鼎鼎的欧拉问题。
欧拉问题和哈密尔顿问题看起来极其相似，但是解决思路却完全不同。
欧拉问题有极其优美的数学解法，在这一章，希望同学们也能领略数学之美。

10-1 什么是欧拉回路 (13:45)
10-2 欧拉回路的存在性及证明 (19:35)
10-3 实现欧拉回路存在性的判断 (09:37)
10-4 求解欧拉回路的三种算法 (17:13)
10-5 Hierholzer 算法模拟 (13:51)
10-6 实现 Hierholzer 算法 (21:26)
10-7 欧拉路径和本章小结 (07:48)



第11章 最小生成树11 节 | 139分钟
在这一章，我们将开始迈入有权图的世界，来看最小生成树问题。
我们将介绍两种最小生成树算法：Prim和Kruskal。
通过这两个算法的学习，大家也将看到高级数据结构，
比如并查集和优先队列，在解决复杂算法问题中的作用。

11-1 带权图及实现 (18:32)
11-2 Map 的遍历 (09:50)
11-3 最小生成树和 Kruskal 算法; (12:00)
11-4 切分定理 (13:55)
11-5 Kruskal 算法的实现 (16:10)
11-6 并查集动态环检测 (16:03)
(+)11-7 思想简单但实现复杂的算法
11-8 Prim 算法的原理及模拟 (09:05)
11-9 实现 Prim 算法 (13:22)
11-10 Prim 算法的优化 (18:15)
11-11 本章小结和更多关于最小生成树问题的讨论 (10:52)



第12章 最短路径算法13 节 | 201分钟
最短路径问题应该是图论领域最典型，也是最古老的应用了。
尽管如此，最短路径算法并没有那么简单，不同的最短路径算法，有着各自的优劣和适应场合。
在这一章，我们就将系统地学习比较这些最短路径算法。

12-1 有权图的最短路径问题 (11:28)
12-2 Dijkstra 算法的原理和模拟 (18:29)
12-3 实现 Dijkstra 算法 (19:19)
12-4 Dijkstra 算法的优化 (18:29)
12-5 更多关于 Dijkstra 算法的讨论 (16:03)
(+)12-6 Dijkstra 和 BFS 的联系
12-7 Bellman-Ford 算法 (14:41)
12-8 负权环 (21:33)
12-9 实现 Bellman-Ford 算法. (17:22)
12-10 更多关于 Bellman-Ford 算法的讨论 (14:13)
12-11 Floyd 算法 (21:05)
12-12 实现 Floyd 算法 (15:01)
12-13 本章小结和更多关于最短路径问题的讨论 (12:58)



第13章 有向图算法13 节 | 216分钟
在这一章，我们将迈入有向图的世界。
我们将看有向图和无向图有什么本质的不同，进而深入研究 DAG 的性质，
从而学习拓扑排序，关键路径，SCC等算法问题。

13-1 有向图的实现 (20:55)
13-2 有向图算法 (20:18)
13-3 有向图环检测和 DAG (19:03)
13-4 有向图的度:入度和出度 (12:37)
13-5 有向图求解欧拉回路 (19:00)
13-6 拓扑排序 (17:06)
13-7 拓扑排序算法的实现 (12:54)
13-8 另一个拓扑排序算法 (11:25)
13-9 另一个拓扑排序算法的实现 (08:40)
13-10 有向图的强连通分量 (20:37)
13-11 Kosaraju 算法 (19:39)
13-12 Kosaraju 算法的实现 (23:09)
13-13 有向图算法小节 (10:25)



第14章 网络流8 节 | 133分钟
在这一章，我们将接触一种全新的结构：网络。在图论的世界中，对“网络”有着特殊的定义。
同时，也能延伸出大名鼎鼎的“网络流”算法。
在这一章，我们将学习网络流这一图论领域的“高级算法”，看如何应用它，解决大量实际中的问题。

14-1 网络流模型和最大流问题 (15:43)
14-2 Ford-Fulkerson 思想 (21:08)
14-3 Edmonds-Karp 算法 (15:26)
14-4 最大流算法的基本架构 (19:15)
14-5 实现 Edmonds-Karp 算法 (19:45)
14-6 Edmonds-Karp 算法的测试和更多讨论 (12:54)
14-7 网络流问题建模 (19:45)
14-8 本章小结和更多相关讨论 (08:10)



第15章 匹配问题8 节 | 137分钟
匹配算法可以看作是网络流算法的延伸，也有着自己独特的思想。
在这一章，我们将仔细看一种特殊的图结构：二分图，进而，仔细研究其中所涉及的匹配问题。

15-1 最大匹配和完美匹配 (08:36)
15-2 使用最大流算法解决匹配问题 (08:51)
15-3 实现二分图匹配算法 (20:35)
15-4 通过 Leetcode 的一个 Hard 问题，看匹配算法建模 (24:18)
15-5 匈牙利算法 (24:37)
15-6 匈牙利算法的实现 (25:46)
15-7 基于递归实现的匈牙利算法 (17:38)
15-8 匹配问题小结 (05:41)



第16章 更广阔的图论世界2 节 | 24分钟
通过这个课程的学习，相信大家已经是图论领域的小牛了。
但是，图论领域远远不止如此，甚至很多极其前沿的科学问题，都和图论这个领域有着千丝万缕的联系。
希望这个课程是一个开始，让感兴趣的同学们，可以在更广阔的图论世界翱翔。大家加油！

16-1 更广阔的图论算法世界 (23:58)
(+)16-2 更广阔的图论世界
